from configs import parse_base_args

__all__ = ['parse_sgnet_args']

def parse_sgnet_args():
    parser = parse_base_args()
    parser.add_argument('--dataset', default='PIE', type=str)
    parser.add_argument('--lr', default=5e-04, type=float)
    parser.add_argument('--data_root', default='data/PIE', type=str)
    parser.add_argument('--model', default='SGNet_CVAE', type=str)
    parser.add_argument('--bbox_type', default='cxcywh', type=str)
    parser.add_argument('--normalize', default='zero-one', type=str)
    parser.add_argument('--hidden_size', default=512, type=int)
    parser.add_argument('--enc_steps', default=15, type=int)
    parser.add_argument('--dec_steps', default=45, type=int)
    parser.add_argument('--dropout', default=0.0, type=float)
    parser.add_argument('--nu', default=0.0, type=float)
    parser.add_argument('--sigma', default=1.5, type=float)
    parser.add_argument('--FPS', default=30, type=int)
    parser.add_argument('--min_bbox', default=[0,0,0,0], type=list)
    parser.add_argument('--max_bbox', default=[1920, 1080, 1920, 1080], type=list)
    parser.add_argument('--K', default=20, type=int)
    parser.add_argument('--DEC_WITH_Z', default=True, type=bool)
    parser.add_argument('--LATENT_DIM', default=32, type=int)
    parser.add_argument('--pred_dim', default=4, type=int)
    parser.add_argument('--input_dim', default=4, type=int)
    parser.add_argument('--display_images', default=False, action='store_true')
    parser.add_argument('--display_freq', default=30.0, type=float)
    parser.add_argument('--disable_tensorboard', default=False, action='store_true')
    parser.add_argument('--multi_task', default=False, action='store_true')
    parser.add_argument('--experiment', default='foo', type=str)
    parser.add_argument('--optim', default='adam', type=str)
    # LDS
    parser.add_argument('--lds', default=False, action='store_true')
    parser.add_argument('--reweight', default='none', type=str, choices=['none', 'inverse', 'sqrt_inv'], help='cost-sensitive reweighting scheme')
    parser.add_argument('--lds_kernel', default='gaussian', type=str)
    parser.add_argument('--lds_ks', default=5, type=int)
    parser.add_argument('--lds_sigma', default=2.0, type=float)
    # Balanced MSE
    parser.add_argument('--bmse', default=False, action='store_true')
    parser.add_argument('--imp', type=str, default='gai', choices=['gai', 'bmc', 'bni'], help='implementation options')
    # FDS
    parser.add_argument('--fds', action='store_true', default=False, help='whether to enable FDS')
    parser.add_argument('--fds_kernel', type=str, default='gaussian', choices=['gaussian', 'triang', 'laplace'], help='FDS kernel type')
    parser.add_argument('--fds_ks', type=int, default=5, help='FDS kernel size: should be odd number')
    parser.add_argument('--fds_sigma', type=float, default=2, help='FDS gaussian/laplace kernel sigma')
    parser.add_argument('--start_update', type=int, default=0, help='which epoch to start FDS updating')
    parser.add_argument('--start_smooth', type=int, default=1, help='which epoch to start using FDS to smooth features')
    parser.add_argument('--bucket_num', type=int, default=1360, help='maximum bucket considered for FDS')
    parser.add_argument('--bucket_start', type=int, default=1, help='minimum(starting) bucket for FDS')
    parser.add_argument('--fds_mmt', type=float, default=0.9, help='FDS momentum')
    return parser.parse_args()